name: Zanadir Action
description: Scan your GitHub repository using Zanadir tool

inputs:
  dir:
    description: 'Path to the GitHub repository directory (required)'
    required: true
  excluded-categories:
    description: 'List of excluded categories (optional)'
    required: false
  enforce:
    description: 'Fails the CI process when at least one rule is met (optional)'
    required: false
  debug:
    description: 'Run the tool using debug mode (optional)'
    required: false
  output:
    description: 'Output format of the tool (table or json; default is table)'
    required: false

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        set -e

        # Initialize ARGS with the scan command and the dynamically set directory
        ARGS="scan --dir '/repo/${{ inputs.dir }}'"

        # Add excluded categories if provided
        if [ -n "${{ inputs.excluded-categories }}" ]; then
          ARGS="$ARGS --excluded-categories '${{ inputs.excluded-categories }}'"
        fi

        # Validate and apply output format (only table or json)
        if [ "${{ inputs.output }}" = "json" ] || [ "${{ inputs.output }}" = "table" ]; then
          ARGS="$ARGS --output '${{ inputs.output }}'"
        else
          # Default to table if no output is specified
          ARGS="$ARGS --output table"
        fi

        # Conditionally add debug flag if true
        if [ "${{ inputs.debug }}" = "true" ]; then
          ARGS="$ARGS --debug"
        fi

        # Conditionally add enforce flag if true
        if [ "${{ inputs.enforce }}" = "true" ]; then
          ARGS="$ARGS --enforce"
        fi

        echo "Running: zanadir $ARGS"

        # Run the docker container with the dynamically constructed args
        docker run --rm \
          -v "${{ github.workspace }}:/repo" \
          -w /repo \
          mustachecase/zanadir:latest $ARGS
